{"version":3,"sources":["script.js"],"names":["app","CreateContact","name","email","address","id","this","createNewContact","createdContact","localStorage","setItem","contactsSize","contactCount","commitToStorage","objectCount","newObject","item","JSON","stringify","deleteContactFromStorage","getContactFromStorage","parse","getItem","displayElem","names_array","$","each","index","li","lis","indexOf","find","text","toLowerCase","hide","show","identifyKey","e","which","searchName","array","string_to_search","searchString","string","temp_string","slice","length","filter","showForm","slideUp","slideDown","hideForm","getContactData","$li","currentTarget","closest","nameData","emailData","addressData","addClass","val","attr","updateContact","contact","editContact","newContact","deleteContact","remove","removeItem","clearForm","target","not","removeClass","renderContact","contactTemplate","html","single_contact","templateFunction","Handlebars","compile","html_code","append","renderContacts","storage","i","incrementId","Number","init","self","$form","on","submit","preventDefault","form_id","hasClass","li_id","selectedNames","names","map","push"],"mappings":"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","file":"scripts.min.js","sourcesContent":["var app = {\r\n  // create contact object constructor\r\n  CreateContact: function(name, email, address, id) {\r\n    this.name = name;\r\n    this.email = email;\r\n    this.address = address;\r\n    this.id = id;\r\n  },\r\n\r\n  createNewContact: function(name, email, address, id) {\r\n    var createdContact = new this.CreateContact(name, email, address, id);\r\n    localStorage.setItem('contactCount', createdContact.id); \r\n    var contactsSize = localStorage.contactCount;\r\n    this.commitToStorage(contactsSize, createdContact);\r\n  },\r\n\r\n  commitToStorage: function(objectCount, newObject) {\r\n    // the unique key\r\n    var item = 'contact' + objectCount;\r\n    localStorage.setItem('contactCount', objectCount);\r\n\r\n    // store the object\r\n    localStorage.setItem(item, JSON.stringify(newObject));\r\n  },\r\n\r\n  deleteContactFromStorage: function() {},\r\n\r\n  getContactFromStorage: function(id) {\r\n    return JSON.parse(localStorage.getItem('contact' + id));\r\n  },\r\n\r\n  displayElem: function(names_array) {\r\n    $('li').each(function(index, li, lis) {\r\n      if (names_array.indexOf($(this).find('.name').text().toLowerCase()) === -1) {\r\n        $(this).hide();\r\n      } else {\r\n        $(this).show();\r\n      }\r\n    });\r\n  },\r\n\r\n  identifyKey: function(e) {\r\n    return (e.which >= 97 && e.which <= 122);\r\n  },\r\n\r\n  searchName: function (array, string_to_search) {\r\n    var searchString = function(string) {\r\n      var temp_string = string.slice(0, string_to_search.length);\r\n      return temp_string === string_to_search;\r\n    }; \r\n    return array.filter(searchString);\r\n  },\r\n\r\n  showForm: function() {\r\n    $('main').slideUp(300);\r\n    $('.add-contact-form').slideDown(400);\r\n  },\r\n\r\n  hideForm: function() {\r\n    $('main').slideDown(400);\r\n    $('.add-contact-form').slideUp(300);\r\n  },\r\n\r\n  getContactData: function(e) {\r\n    // implement edit - get data from li, recall form, prepopulate form with data\r\n    var $li = $(e.currentTarget).closest('li');\r\n    var nameData = $li.find('.name').text();\r\n    var emailData = $li.find('.email').text();\r\n    var addressData = $li.find('.address').text();\r\n    $('.add-contact-form form').addClass(\"editing\");\r\n    $('#name').val(nameData);\r\n    $('#email').val(emailData);\r\n    $('#address').val(addressData);\r\n    $('#current_id').attr('data-id', $li.attr(\"data-id\"));\r\n    this.showForm();\r\n  },\r\n\r\n  // update obj prop, return obj with name, email, address, id\r\n  updateContact: function(contact) {\r\n    contact.name = $('#name').val();\r\n    contact.email = $('#email').val();\r\n    contact.address = $('#address').val();\r\n    return contact;\r\n  },\r\n\r\n  editContact: function(id) {\r\n    var contact = this.getContactFromStorage(id);\r\n    var newContact = this.updateContact(contact);\r\n    this.commitToStorage(id, newContact);\r\n  },\r\n\r\n  deleteContact: function(e, id) {\r\n    var $li = $('li').filter(function() {\r\n      return ($(this).attr('data-id') == id);\r\n    });\r\n    $li.remove();\r\n    localStorage.removeItem(\"contact\" + id);\r\n  },\r\n\r\n  clearForm: function(e) {\r\n    $(e.target).find('input').not(':hidden').val('');\r\n    $(e.target).removeClass(\"editing\");\r\n  },\r\n\r\n  newContact: function(name, email, address, id) {\r\n   this.createNewContact(name, email, address, id);\r\n  },\r\n\r\n  renderContact: function(id) {\r\n    var contactTemplate = $('#contact').html();\r\n    var single_contact = this.getContactFromStorage(id); \r\n    var templateFunction = Handlebars.compile(contactTemplate);\r\n    var html_code = templateFunction({contact: single_contact}); \r\n    $('#contacts').append(html_code);\r\n  },\r\n\r\n// check if contact valid\r\n\r\n  renderContacts: function(storage) {\r\n    for (var i = 1; i <= +(storage.getItem('contactCount')); i++) {\r\n      if (this.getContactFromStorage(i)) {\r\n        this.renderContact(i);\r\n      }\r\n    }\r\n  },\r\n\r\n  incrementId: function(id) {\r\n    return Number(++id);\r\n  },\r\n\r\n  init: function() {\r\n    var self = this;\r\n    var $form =  $('.add-contact-form form');\r\n    var $submit_btn = $('[type=\"submit\"]');\r\n\r\n    if (localStorage.length !== 0) {\r\n      $('input[type=\"hidden\"]').val(localStorage.getItem('contactCount'));\r\n    }\r\n\r\n    $('#add_contact_btn').on('click', function(e) {\r\n      self.showForm();\r\n    });\r\n\r\n    $('button[type=\"reset\"]').on('click', function(e) {\r\n      self.hideForm();\r\n      $form.removeClass('editing');\r\n    });\r\n\r\n    $form.submit(function(e) {\r\n      e.preventDefault();\r\n      var form_id = $('input[type=\"hidden\"]').val();\r\n      var name = $('#name').val();\r\n      var email = $('#email').val();\r\n      var address = $('#address').val();\r\n\r\n      if ( $form.hasClass(\"editing\")) {\r\n        var li_id = $('#current_id').attr('data-id');\r\n        self.editContact(li_id);\r\n      } else {\r\n        $('input[type=\"hidden\"]').val(self.incrementId(form_id));\r\n        var id =  $('input[type=\"hidden\"]').val();\r\n        self.newContact(name, email, address, id);\r\n        self.renderContact(id);\r\n      }\r\n      self.hideForm();\r\n      self.clearForm(e);\r\n    });\r\n\r\n    $('#contacts').on('click', '.edit', function(e) {\r\n      self.getContactData(e);\r\n    });\r\n\r\n    $('#contacts').on('click', '.delete', function(e) {\r\n      var id = $(e.currentTarget).closest('li').attr('data-id');\r\n      self.deleteContact(e, id);\r\n    });\r\n\r\n    $('input[type=\"search\"]').on('keyup', function(e) {\r\n      var selectedNames;\r\n      if (self.identifyKey) {\r\n        var names = [];\r\n        $('li').map(function() {\r\n          names.push($(this).find('.name').text().toLowerCase());\r\n        });\r\n\r\n        selectedNames = self.searchName(names, $(this).val().toLowerCase());\r\n      } else {\r\n        return false;\r\n      }\r\n      \r\n      self.displayElem(selectedNames);\r\n    });\r\n    \r\n    self.renderContacts(localStorage);\r\n  }\r\n};\r\n\r\n$(function() { app.init(); });"]}